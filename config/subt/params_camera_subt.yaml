%YAML:1.0

# Project
project_name: "lvi_sam"

#common parameters
imu_topic: "/imu/data"
image_topic: "/camera/image_raw"
point_cloud_topic: "/velodyne_points"
# point_cloud_topic: "lvi_sam/lidar/deskew/cloud_deskewed"

# Lidar Params
use_lidar: 1                     # whether use depth info from lidar or not
lidar_skip: 3                    # skip this amount of scans
align_camera_lidar_estimation: 1 # align camera and lidar estimation for visualization
downsampleRate: 1

# lidar to camera extrinsic
lidar_to_cam_tx: -0.061989
lidar_to_cam_ty: -0.061169
lidar_to_cam_tz: -0.152722
lidar_to_cam_rx: 1.5543827
lidar_to_cam_ry: -0.0325844
lidar_to_cam_rz: 1.520843

#Rotation from laser frame to camera frame, camera^R_laser
extrinsicRotationLC: !!opencv-matrix
  rows: 3
  cols: 3
  dt: d
  data: [0.049905,  -0.998222,  -0.032578,
           0.014766,  0.033353,  -0.999335,
         0.998645,  0.049391,  0.016405  ]
#Translation from laser frame to camera frame, camera^T_laser
extrinsicTranslationLC: !!opencv-matrix
  rows: 3
  cols: 1
  dt: d
  data: [ -0.061989, -0.061169, -0.152722]

# camera model

model_type: KANNALA_BRANDT
camera_name: camera
image_width: 1028
image_height: 770

projection_parameters:
   k2: -0.0012457781046159308
   k3: -0.0026607413097630146
   k4: 0.0005352777938811677
   k5: -0.0003946321185203127
   mu: 293.4596338911421
   mv: 292.8730499573656
   u0: 528.3552460038057
   v0: 374.80976440349616

fisheye_mask: "/config/subt/fisheye_mask_ds.png"

#imu parameters       The more accurate parameters you provide, the worse performance
acc_n: 0.02         # accelerometer measurement noise standard deviation.
gyr_n: 0.01         # gyroscope measurement noise standard deviation.
acc_w: 0.002        # accelerometer bias random work noise standard deviation.
gyr_w: 4.0e-5       # gyroscope bias random work noise standard deviation.
g_norm: 9.805       #

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.
                        # 2  Don't know anything about extrinsic parameters. You don't need to give R,T. We will try to calibrate it. Do some rotation movement at beginning. 

#Rotation from camera frame to imu frame, imu^R_cam
extrinsicRotation: !!opencv-matrix
  rows: 3
  cols: 3
  dt: d
  data: [-0.02158326,  -0.05724388,  0.9981269,
         -0.99939148,  0.02859798, -0.01997047,
         -0.02740122, -0.99795055,  -0.05782628]
#Translation from camera frame to imu frame, imu^T_cam
extrinsicTranslation: !!opencv-matrix
  rows: 3
  cols: 1
  dt: d
  data: [0.17247707,-0.02225878, -0.05460906]

#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking
min_dist: 20            # min distance between two features 
freq: 20                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
equalize: 1             # if image is too dark or light, trun on equalize to find enough features
fisheye: 1              # if using fisheye, trun on it. A circle mask will be loaded to remove edge noisy points

#optimization parameters
max_solver_time: 0.035   # max solver itration time (ms), to guarantee real time
max_num_iterations: 10   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0  # keyframe selection threshold (pixel)

#unsynchronization parameters
estimate_td: 0           # online estimate time offset between camera and imu
td: 0                    # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#rolling shutter parameters
rolling_shutter: 0       # 0: global shutter camera, 1: rolling shutter camera
rolling_shutter_tr: 0    # unit: s. rolling shutter read out time per frame (from data sheet). 

#loop closure parameters
loop_closure: 0                    # start loop closure
skip_time: 0.0
skip_dist: 0.0
debug_image: 0                      # save raw image in loop detector for visualization prupose; you can close this function by setting 0 
match_image_scale: 0.5
vocabulary_file: "/config/brief_k10L6.bin"
brief_pattern_file: "/config/brief_pattern.yml"

#Rotation from laser frame to imu frame, imu^R_laser
extrinsicRotation_imu_laser: !!opencv-matrix
  rows: 3
  cols: 3
  dt: d
  data: [0.999231, 0.00609501, 0.0387313,
         -0.0057701, 0.999947, -0.00849503,
         -0.038781, 0.00826502, 0.999214 ]
#Translation from laser frame to imu frame, imu^T_laser
extrinsicTranslation_imu_laser: !!opencv-matrix
  rows: 3
  cols: 1
  dt: d
  data: [-0.0351814, -0.0147287, 0.06434955]

